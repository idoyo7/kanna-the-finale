name: Docker Image Build & Update Manifest

on:
  push:
    branches:
      - master

permissions:
  contents: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    environment: production # 여기서 환경을 선언

    steps:
      # 1. 레포지토리 체크아웃
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Docker Hub 로그인
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # 3. 무작위 태그 생성
      - name: Generate random tag for Docker image
        id: vars
        run: echo "IMAGE_TAG=$(date +%s | sha256sum | cut -c1-6)" >> $GITHUB_ENV

      # 4. Docker 이미지 빌드 및 푸시
      - name: Build and push Docker image
        run: |
          docker build -t "${{ secrets.DOCKERHUB_USERNAME }}/kanna:${{ env.IMAGE_TAG }}" .
          docker push "${{ secrets.DOCKERHUB_USERNAME }}/kanna:${{ env.IMAGE_TAG }}"

      # 5. deployment.yaml 이미지 태그 업데이트
      - name: Update image tag in deployment.yaml
        run: |
          # manifest 디렉토리가 없으면 생성
          mkdir -p manifest
          # deployment.yaml이 없으면 기본 템플릿 생성
          if [ ! -f manifest/deployment.yaml ]; then
            echo "Creating new deployment.yaml"
            cp .kubernetes/deployment.template.yaml manifest/deployment.yaml || true
          fi
          sed -i 's|image:.*|image: ${{ secrets.DOCKERHUB_USERNAME }}/kanna:${{ env.IMAGE_TAG }}|' manifest/deployment.yaml

      # 6. 변경 사항 커밋 및 푸시
      - name: Commit and push changes
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          # -f 옵션을 사용하여 .gitignore를 무시하고 강제로 추가
          git add -f manifest/deployment.yaml
          git commit -m "Update image tag to ${{ env.IMAGE_TAG }}"
          git push

